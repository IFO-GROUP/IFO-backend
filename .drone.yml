---
kind: pipeline
type: docker
name: "Deploy to production"

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: http://container-registry:5000
      repo: container-registry:5000/${DRONE_REPO,,}
      auto_tag: false
      insecure: true
      dockerfile: ./Dockerfile
      tags:
        - prod
        - ${DRONE_BUILD_NUMBER}
  - name: "run migrations"
    image: container-registry:5000/${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
    commands:
      - python manage.py migrate

  - name: "container creating"
    image: docker:20.10.14
    privileged: true
    volumes:
    - name: cache
      path: /var/run/docker.sock
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      MEDIA_HOST_PATH:
        from_secret: MEDIA_HOST_PATH
    commands:
      - sh remove-container.sh ifo-backend
      - sh create-container.sh

trigger:
  branch:
    - master
volumes:
- name: cache
  host:
    path: /var/run/docker.sock
---
kind: signature
hmac: 696fa5a7b0ef2ba841626a7ded53d00359c896559960c49d399dde01ec6b6a14

...
