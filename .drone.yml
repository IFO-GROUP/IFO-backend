---
kind: pipeline
type: docker
name: "Deploy to production"

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: http://container-registry:5000
      repo: container-registry:5000/${DRONE_REPO,,}
      auto_tag: false
      insecure: true
      dockerfile: ./Dockerfile
      tags:
        - prod
        - ${DRONE_BUILD_NUMBER}
  - name: "run migrations"
    image: container-registry:5000/${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
    commands:
      - python manage.py migrate

  - name: "container creating"
    image: docker:20.10.14
    privileged: true
    volumes:
    - name: cache
      path: /var/run/docker.sock
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      MEDIA_HOST_PATH:
        from_secret: MEDIA_HOST_PATH
    commands:
      - |
        CNAME="ifo-backend"
        if [ "$(docker ps -qa -f name=$CNAME)" ]; then
          echo ":: Found container - $CNAME"
          if [ "$(docker ps -q -f name=$CNAME)" ]; then
            echo ":: Stopping running container - $CNAME"
            docker stop "$CNAME"
          fi
          echo ":: Removing stopped container - $CNAME"
          docker rm "$CNAME"
        fi
      - |
        docker run \
          --detach \
          --env POSTGRES_HOST="$POSTGRES_HOST" \
          --env POSTGRES_USER="$POSTGRES_USER" \
          --env POSTGRES_DB="$POSTGRES_DB" \
          --env POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
          --volume=$MEDIA_HOST_PATH:/app/media \
          --network="main" \
          --name="ifo-backend" \
          container-registry:5000/${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}

trigger:
  branch:
    - master
volumes:
- name: cache
  host:
    path: /var/run/docker.sock
---
kind: signature
hmac: df74d5b5763e25bc8036dd6e82f949da2b295f55f9e23c18ee5e0e3387cba861

...
