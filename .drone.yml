---
kind: pipeline
type: docker
name: "Deploy to production"

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: http://container-registry:5000
      repo: container-registry:5000/${DRONE_REPO,,}
      auto_tag: false
      insecure: true
      dockerfile: ./Dockerfile
      tags:
        - prod
        - ${DRONE_BUILD_NUMBER}
  - name: "run migrations"
    image: container-registry:5000/${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
    commands:
      - python manage.py migrate

  - name: "container creating"
    image: docker:20.10.14
    privileged: true
    volumes:
    - name: cache
      path: /var/run/docker.sock
    environment:
      POSTGRES_HOST:
        from_secret: POSTGRES_HOST
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
    commands:
      - docker stop ifo-backend 2> /dev/null
      - docker rm ifo-backend 2> /dev/null
      - docker run --detach --env POSTGRES_HOST=$POSTGRES_HOST --env POSTGRES_USER=$POSTGRES_USER --env POSTGRES_DB=$POSTGRES_DB --env POSTGRES_PASSWORD=$POSTGRES_PASSWORD --network=main --name=ifo-backend container-registry:5000/${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}

trigger:
  branch:
    - master
volumes:
- name: cache
  host:
    path: /var/run/docker.sock
---
kind: signature
hmac: 23ea86747a63caec5068fb4d92e36e27b19918aed791529f16dacc2276b1ff21

...
